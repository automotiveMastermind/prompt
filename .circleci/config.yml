version: 2
jobs:
  macos:
    macos:
      xcode: "10.2.1"
    steps:
      - checkout
      - run:
          name: install
          command: ./install.sh | tee log.txt
      - run:
          name: ensure prompt
          command: bash -l -c "git sha"
      - store_artifacts:
          path: log.txt
          destination: logs/$CIRCLE_STAGE.txt

  ubuntu:
    docker:
      - image: docker:stable
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: install and ensure prompt
          command: docker build --file docker/$CIRCLE_STAGE/Dockerfile . | tee log.txt
      - store_artifacts:
          path: log.txt
          destination: logs/$CIRCLE_STAGE.txt

  debian:
    docker:
      - image: docker:stable
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: install and ensure prompt
          command: docker build --file docker/$CIRCLE_STAGE/Dockerfile . | tee log.txt
      - store_artifacts:
          path: log.txt
          destination: logs/$CIRCLE_STAGE.txt

  fedora-29:
    docker:
      - image: docker:stable
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: install and ensure prompt
          command: docker build --file docker/$CIRCLE_STAGE/Dockerfile . | tee log.txt
      - store_artifacts:
          path: log.txt
          destination: logs/$CIRCLE_STAGE.txt

  fedora-30:
    docker:
      - image: docker:stable
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: install and ensure prompt
          command: docker build --file docker/$CIRCLE_STAGE/Dockerfile . | tee log.txt
      - store_artifacts:
          path: log.txt
          destination: logs/$CIRCLE_STAGE.txt

  centos:
    docker:
      - image: docker:stable
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: install and ensure prompt
          command: docker build --file docker/$CIRCLE_STAGE/Dockerfile . | tee log.txt
      - store_artifacts:
          path: log.txt
          destination: logs/$CIRCLE_STAGE.txt

  mint:
    docker:
      - image: docker:stable
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: install and ensure prompt
          command: docker build --file docker/$CIRCLE_STAGE/Dockerfile . | tee log.txt
      - store_artifacts:
          path: log.txt
          destination: logs/$CIRCLE_STAGE.txt

  deploy:
    docker:
      - image: docker:stable
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a0:dd:b4:96:be:95:30:89:5e:a4:67:57:98:ba:c2:da"
      - checkout
      - run:
          name: install
          command: npm install
      - run:
          name: release
          command: npm run release

workflows:
  version: 2
  install:
    jobs:
      - macos:
          filters:
            branches:
              ignore: master
      - ubuntu:
          filters:
            branches:
              ignore: master
      - debian:
          filters:
            branches:
              ignore: master
      - fedora-29:
          filters:
            branches:
              ignore: master
      - fedora-30:
          filters:
            branches:
              ignore: master
      - centos:
          filters:
            branches:
              ignore: master
      - mint:
          filters:
            branches:
              ignore: master
      - deploy:
          filters:
            branches:
              only: master
