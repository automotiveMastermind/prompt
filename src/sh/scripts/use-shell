#! /usr/bin/env sh

__am_prompt_use_shell() {

	PROMPT_SHELL=${PROMPT_SHELL:-1}

	if [ -z "${PROMPT_SHELL:-}" ]; then
		print-fail "prompt: uou must specify a shell to use, either bash or zsh"
		return 1
	fi

	if [ -f /opt/homebrew/bin/brew ]; then
		LOCAL_PREFIX=$(/opt/homebrew/bin/brew --prefix)
	elif command -v brew 1>/dev/null 2>&1; then
		LOCAL_PREFIX=$(brew --prefix)
	elif [ -d "$LOCALAPPDATA/git" ]; then
		LOCAL_PREFIX=$(printf "%s" "/$LOCALAPPDATA/git" | sed -e 's/\\/\//g' -e 's/://')
	else
		LOCAL_PREFIX=/usr/local
	fi

	PROMPT_SHELL_PATH="$LOCAL_PREFIX/bin/$PROMPT_SHELL"
	INSTALL_PATH="$AM_PROMPT/$PROMPT_SHELL/install"

	if [ -f /etc/os-release ]; then
		. /etc/os-release
		UNAMES="$ID ${ID_LIKE:-unknown} linux"
	else
		UNAMES=$(uname | tr '[:upper:]' '[:lower:]')
	fi

	UNAME=
	until [ "$UNAME" = "$UNAMES" ]; do
		UNAME=${UNAMES%%' '*}
		UNAMES=${UNAMES#*' '}

		UNAME_PATH="$INSTALL_PATH/$UNAME.sh"

		if [ ! -f "$UNAME_PATH" ]; then
			continue
		fi
	done

	if [ ! -f "$UNAME_PATH" ]; then
	  print-fail "prompt: shell cannot be installed on this platform."
	  print-warn "Please open an issue to request support for this distribution."
	  return 1
	fi

	. "$UNAME_PATH"

	if ! grep "$PROMPT_SHELL_PATH" /etc/shells 1>/dev/null 2>&1; then
		print-success "prompt: adding updated $PROMPT_SHELL to shells..."
		sudo sh -c "printf \"%s\n\" $PROMPT_SHELL_PATH >> /etc/shells"
	fi

	if [ "$SHELL" != "$PROMPT_SHELL_PATH" ]; then
		print-success "setting updated $PROMPT_SHELL to default shell for user..."
		sudo chsh -s "$PROMPT_SHELL_PATH" "$(whoami)"

		# set the default shell for the current session
		export SHELL="$PROMPT_SHELL_PATH"
	fi

	printf "\n\n%s${CLR_SUCCESS}" ""
	cat <<-EOT
		##############################################################################
		##############################################################################

		  NOTE: to take advantage of the symbols used by the shell, please set the
		        the terminal font to \`FiraCode Nerd Font Mono\`. If you are using
		        either macOS terminal or gnome terminal, you can do this automatically
		        by loading a \`theme\`.

		  \$SHELL will be $SHELL

		  PLEASE RUN THE FOLLOWING TO START USING THE NEW SHELL:

		  exec \$SHELL -l

		##############################################################################
		##############################################################################
	EOT
	printf "\n\n%s${FORMAT_CLEAR}" ""
}

__am_prompt_use_shell "$@"
