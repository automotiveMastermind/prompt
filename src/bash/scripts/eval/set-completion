#!/usr/bin/env bash

# setup completion
if [ -f "$LOCAL_PREFIX/etc/bash_completion" ]; then
    . "$LOCAL_PREFIX/etc/bash_completion"
elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
elif [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
fi

if type kubectl 1>/dev/null 2>&1; then
    . <(kubectl completion bash)
fi

if type helm 1>/dev/null 2>&1; then
    . <(helm completion bash)
fi

if type minikube 1>/dev/null 2>&1; then
    . <(minikube completion bash)
fi

if type nvm 1>/dev/null 2>&1; then
    . <(npm completion)
fi

__am_prompt_dotnet_bash_complete()
{
  local WORD=${COMP_WORDS[COMP_CWORD]}

  local COMPLETIONS="$(dotnet complete --position "${COMP_POINT}" "${COMP_LINE}" 2>/dev/null)"

  if [ $? -ne 0 ]; then
    COMPLETIONS=""
  fi

  COMPREPLY=( $(compgen -W "$COMPLETIONS" -- "$WORD") )
}

if type dotnet 1>/dev/null 2>&1; then
    complete -f -F __am_prompt_dotnet_bash_complete dotnet
fi

# determine if completions exist
if [ ! -d "$AM_PROMPT/bash/completions" ]; then

    # move on immediately
    return
fi

# iterate over each completion
for AM_COMPLETION in $AM_PROMPT/bash/completions/*; do

    # source the completion
    . "$AM_COMPLETION"
done
